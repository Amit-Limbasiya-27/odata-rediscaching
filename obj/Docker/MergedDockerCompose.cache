name: dockercompose14956291544015996274
services:
  cache:
    command:
    - redis-server
    - --save
    - "20"
    - "1"
    - --loglevel
    - warning
    - --requirepass
    - RedisPassword1234
    image: redis:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 6379
      published: "6379"
      protocol: tcp
    restart: always
    volumes:
    - type: bind
      source: C:\Users\Amit Limbasiya\source\RedisCaching\Redis-Caching-Demo\cacheData
      target: /data
      bind:
        create_host_path: true
  ms-sql-server:
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: Express
      SA_PASSWORD: Password1234
    image: mcr.microsoft.com/mssql/server:2019-GA-ubuntu-16.04
    networks:
      default: null
    ports:
    - mode: ingress
      target: 1433
      published: "1433"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Amit Limbasiya\source\RedisCaching\Redis-Caching-Demo\data
      target: /var/opt/mssql/data
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Amit Limbasiya\source\RedisCaching\Redis-Caching-Demo\log
      target: /var/opt/mssql/log
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Amit Limbasiya\source\RedisCaching\Redis-Caching-Demo\secrets
      target: /var/opt/mssql/secrets
      bind:
        create_host_path: true
  odatarediscaching:
    build:
      context: C:\Users\Amit Limbasiya\source\RedisCaching\Redis-Caching-Demo
      dockerfile: ODataRedisCaching/Dockerfile
    depends_on:
      cache:
        condition: service_started
      ms-sql-server:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      DBServer: ms-sql-server
    image: odatarediscaching
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8080"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 443
      published: "8081"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Amit Limbasiya\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Amit Limbasiya\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose14956291544015996274_default